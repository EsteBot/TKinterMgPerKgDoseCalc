import base64
import os

from tkinter import *
from tkinter import ttk
from tkinter import font

icon = \
""" AAABAAUAEBAAAAEAIABoBAAAVgAAABgYAAABACAAiAkAAL4EAAAgIAAAAQAgAKgQAABGDgAAMDAA
    AAEAIACoJQAA7h4AAAAAAAABACAARBoAAJZEAAAoAAAAEAAAACAAAAABACAAAAAAAAAEAADDDgAA
    ww4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUA
    AAA4AAAARgAAAEUAAABGAAAAQwAAAAAAAAABAAAAKwAAACYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAYAAAAfgAAAFAAAABIAAAAQAAAAIcAAAAAAAAAPQAAAHkAAAB0AAAABQAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAGgAAAI0AAABmAAAAZQAAAAMAAABjAAAARAAAAG0AAACCAAAAXgAAAAcAAABA
    AAAAFgAAAAAAAAAAAAAAAAAAABsAAABfAAAACQAAAGgAAAAKAAAALAAAAJIAAACCAAAAegAAAGgA
    AABzAAAAhAAAAGUAAAAAAAAAAAAAAAAAAAAaAAAAhQAAAFcAAABzAAAABgAAAFkAAABVAAAAOAAA
    AFwAAACIAAAAcwAAAIcAAAB5AAAAGAAAAAAAAAAAAAAAGgAAAIEAAABKAAAAOgAAAB8AAAB5AAAA
    AAAAAAUAAABcAAAAcgAAAIYAAAB2AAAAZwAAAIgAAAAaAAAAAAAAAAcAAAB0AAAAiAAAAGQAAACG
    AAAAjQAAAAAAAAAbAAAAigAAAJAAAAB2AAAAXwAAAJIAAABYAAAATAAAAAcAAAABAAAAcAAAAHkA
    AABfAAAAdQAAAIYAAAAAAAAAAQAAACsAAABUAAAAbwAAAJMAAAA7AAAAAAAAAA4AAABYAAAAHQAA
    AG0AAABlAAAAXAAAAGIAAACCAAAAAAAAAAAAAAAAAAAAAAAAAEgAAACSAAAASwAAAAkAAAAAAAAA
    LgAAAGMAAAATAAAAJwAAADsAAAAmAAAAFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARwAAAJUAAABJ
    AAAACgAAAA4AAABrAAAABgAAAFAAAABwAAAASQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AABGAAAAmgAAAEgAAABXAAAAjwAAACcAAABdAAAAUwAAAFkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAQAAADUAAABSAAAAdgAAAI8AAABRAAAAJAAAAIUAAAAfAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAhAAAAZwAAADgAAAALAAAAAQAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8AAABmAAAAKwAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAA
    ABkAAAAAAAAAAP/AAACPwAAAh8AAAAHAAAABwAAAAMAAAIBAAACAAAAAgQAAAPCAAAD4AQAA/AEA
    APwBAAD/gQAA/+MAAP/zAAAoAAAAGAAAADAAAAABACAAAAAAAAAJAADDDgAAww4AAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAIAAAAOAAAAEQAAABAAAAAQAAAAEAAAABAAAAALAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEUAAACeAAAA
    kQAAAJEAAACRAAAAkQAAAJMAAACkAAAAAAAAAAAAAAAAAAAAJwAAAGAAAAAeAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGoAAABlAAAAFgAAABkAAAAVAAAAFAAAABkA
    AACoAAAAAAAAAAAAAAAvAAAAmAAAAIkAAAB/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAGsAAACyAAAAigAAAJMAAABaAAAAAAAAAAUAAAChAAAAAAAAAC8AAACaAAAA
    RgAAAIIAAABaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGoAAABr
    AAAAHQAAAEoAAACMAAAAAQAAAAQAAACAAAAANQAAAJkAAABFAAAAhAAAAL8AAAAlAAAAAAAAACYA
    AAB3AAAAHwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGkAAABTAAAAAAAAACwAAACIAAAAAgAA
    AAEAAAAkAAAArQAAAEgAAACQAAAAjAAAAE8AAACSAAAAQgAAAJUAAACGAAAAkwAAAAgAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAGoAAAB2AAAALwAAAFkAAACNAAAAAQAAAAQAAACRAAAArwAAAJcAAACD
    AAAAmAAAADcAAABoAAAAxAAAAEkAAACBAAAApwAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGsA
    AACqAAAAfgAAAIUAAABMAAAAAAAAAAUAAAChAAAAJQAAADQAAAAEAAAALAAAAKYAAAClAAAASgAA
    AIQAAACMAAAAhQAAAGcAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAGoAAABpAAAAHQAAACIAAAAhAAAA
    IgAAACQAAACtAAAAAAAAAAAAAAAAAAAAJQAAAKMAAABOAAAAeAAAAJwAAACTAAAAKwAAAIwAAABt
    AAAABAAAAAAAAAAAAAAAAAAAADoAAACtAAAArAAAAIgAAACJAAAAjgAAALsAAACaAAAAAAAAAAAA
    AAAZAAAAnAAAAEwAAAB2AAAAxQAAAEEAAABKAAAAlwAAAJcAAACyAAAAZgAAAAQAAAAAAAAAAAAA
    AAIAAAB0AAAAlwAAAEoAAABMAAAAVwAAALIAAAA1AAAAAAAAAAAAAAAeAAAAoQAAAJ0AAACvAAAA
    PQAAAJgAAABJAAAApwAAAGoAAAAVAAAAawAAABsAAAAAAAAAAAAAACEAAACrAAAAdgAAAG8AAABw
    AAAAbwAAAI4AAACVAAAAAAAAAAAAAAAAAAAALAAAAFsAAAB8AAAAcgAAAEUAAADJAAAAYQAAAAMA
    AAAAAAAAAAAAAD0AAABhAAAAAgAAACYAAAChAAAARQAAAEIAAABCAAAAQAAAAGUAAACcAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAKAAAAeAAAALsAAABqAAAAIQAAAAYAAAAAAAAAAAAAABEAAACIAAAA
    ZAAAAA0AAABjAAAAdgAAAHQAAABzAAAAdAAAAHYAAABFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAACgAAAH0AAACgAAAAhQAAABQAAAAFAAAAAAAAAAAAAAAVAAAAmgAAAB4AAAAAAAAAAAAAAA8A
    AAAYAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkAAACEAAAAlAAA
    AIIAAAAjAAAAAAAAAAAAAAAEAAAAigAAACUAAAAAAAAAKwAAAJYAAACaAAAAYAAAAAEAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAgwAAAKQAAABeAAAAOgAAAAAAAAAW
    AAAArQAAADoAAAAAAAAAawAAAF0AAAAcAAAAmQAAAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAACQAAAHwAAADFAAAATQAAADcAAACNAAAAiQAAAI4AAAAHAAAASAAA
    AH4AAABDAAAAhwAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAoAAABhAAAAggAAAIkAAACyAAAAbAAAAKgAAAASAAAACAAAAI8AAAC2AAAAMgAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAuAAAAbgAAAJYAAABkAAAAAgAAACMAAABFAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABIAAACKAAAA
    ZQAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASAAAAigAAAGYAAAAEAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAAAHQAAAAfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAUAAAADAAAAAAAAAAAAAAAA//8AAP//AADj/wAAw/8EAIP/AAACPyAAAB8AAAAfBAAA
    DwAA4AcAAMADAADAAwAA4BgAAPgYAAD8DGMA/gxBAP8EQQD/gAEA/8ADAP/8AwD//w8A//+HAP//
    xwD//+cAKAAAACAAAABAAAAAAQAgAAAAAAAAEAAAww4AAMMOAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAEUAAABzAAAAcwAAAHMAAABzAAAA
    cwAAAHMAAABzAAAAcwAAAFoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAvQAAAJkA
    AACCAAAAgwAAAIMAAACDAAAAgwAAAIMAAACQAAAA4wAAAAAAAAAAAAAAAAAAAAAAAAAZAAAAdwAA
    AG8AAAARAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAABMAAAC2AAAAKQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABkAAADRAAAAAAAAAAAAAAAA
    AAAAGwAAAKgAAACbAAAAsgAAAGoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAEgAAAMUAAACoAAAAlAAAAJUAAACTAAAAOAAAAAAAAAAAAAAAGQAA
    ANEAAAAAAAAAAAAAABsAAACpAAAAiQAAABcAAACkAAAAbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATAAAAvwAAAHoAAABdAAAAXAAAAKcAAACE
    AAAAAAAAAAAAAAAZAAAA0QAAAAAAAAAaAAAAqQAAAIgAAAAYAAAAmAAAAKAAAAARAAAAAAAAAAAA
    AAACAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMAAAC2AAAAKQAA
    AAAAAAAAAAAAcAAAAIcAAAAAAAAAAAAAAAsAAABpAAAAHgAAAKgAAACIAAAAFwAAAJIAAADfAAAA
    kgAAAAoAAAAAAAAAAwAAAGIAAACmAAAAKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAEwAAALYAAAAqAAAAAAAAAAAAAABwAAAAhwAAAAAAAAAAAAAAAwAAACMAAACxAAAAiAAAABcA
    AACaAAAAqgAAACsAAACmAAAAjAAAAA4AAABmAAAAugAAAI8AAAC2AAAAHAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAATAAAAuAAAADQAAAAKAAAACAAAAHcAAACHAAAAAAAAAAAAAAAWAAAA
    vwAAANoAAABKAAAAkwAAAMsAAAC1AAAAJQAAABcAAACjAAAAuwAAALoAAAAvAAAAUwAAAMwAAAAm
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABIAAADHAAAAwAAAALEAAACxAAAAzAAAAG0A
    AAAAAAAAAAAAABkAAADRAAAAhAAAAL8AAACQAAAAGQAAAHQAAAC2AAAAKAAAAHUAAADMAAAALwAA
    AEsAAADPAAAAywAAADQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEwAAALsAAABVAAAA
    MQAAADQAAAAvAAAADAAAAAAAAAAAAAAAGQAAANEAAAAFAAAAFQAAAAcAAAAAAAAABQAAAHUAAADT
    AAAAuwAAAC8AAABNAAAA1wAAAFEAAABjAAAAvQAAADMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAATAAAAugAAAEIAAAAaAAAAHQAAAB0AAAAgAAAAIQAAAB4AAAA1AAAA1wAAAAAAAAAAAAAAAAAA
    AAAAAAACAAAAagAAAMUAAAAwAAAATAAAAMAAAAC9AAAAiQAAAA0AAABkAAAAuwAAADIAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAkAAACXAAAAzwAAAM0AAAC3AAAAtwAAALcAAAC3AAAAyQAAAM8AAAC9
    AAAAAAAAAAAAAAAAAAAAAgAAAGUAAAC7AAAALwAAAEwAAADfAAAAYwAAABcAAACnAAAAiwAAACIA
    AADCAAAAygAAADIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAAB4AAAAmQAAABgAAAAaAAAAGgAA
    ABYAAACEAAAAjAAAAAsAAAAAAAAAAAAAAAAAAAAzAAAA0QAAAD0AAABMAAAAvAAAAJoAAACyAAAA
    JgAAABYAAACoAAAA0wAAAJIAAABwAAAAvAAAAC8AAAAAAAAAAAAAAAAAAAAAAAAAJgAAALoAAADQ
    AAAAlwAAAJgAAACYAAAAlwAAAMcAAADGAAAAOgAAAAAAAAAAAAAAAAAAABYAAACmAAAArAAAAN0A
    AACfAAAADAAAAHUAAAC1AAAAOAAAAKQAAACcAAAAEAAAAAIAAABbAAAAQgAAAAAAAAAAAAAAAAAA
    AAAAAABlAAAAswAAAFUAAABYAAAAWAAAAFgAAABYAAAAVAAAAKMAAACOAAAAAAAAAAAAAAAAAAAA
    AAAAABwAAACDAAAAXAAAAK4AAAB9AAAACgAAAH0AAADlAAAAlQAAABAAAAAAAAAAAAAAAAAAAAAI
    AAAAdQAAADQAAAAAAAAAAAAAAGgAAACYAAAAFAAAABYAAAAWAAAAFgAAABYAAAATAAAAggAAAJEA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIgAAALEAAACGAAAAmwAAAJgAAAAPAAAAAAAA
    AAAAAAAAAAAAAAAAAAEAAABlAAAAvQAAADMAAAAAAAAARgAAAMYAAAC4AAAAtwAAALcAAAC3AAAA
    twAAALcAAADFAAAAZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIgAAALoAAADJ
    AAAAIAAAAFkAAAAqAAAAAAAAAAAAAAAAAAAAAAAAAAIAAABmAAAAugAAACUAAAACAAAAGwAAACAA
    AAAgAAAAHgAAAB8AAAAgAAAAIAAAABwAAAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAIgAAAKwAAAC5AAAAsQAAACEAAAALAAAAAgAAAAAAAAAAAAAAAAAAAAQAAACgAAAA
    XQAAAAAAAAAAAAAAAAAAAAMAAAAYAAAAFQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIgAAAL0AAACRAAAAUAAAAJQAAAAMAAAAAAAAAAAA
    AAAAAAAAAAAAAJAAAABjAAAAAAAAAAAAAAAHAAAAeAAAALwAAAC7AAAAZQAAAAIAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQAAALEAAADhAAAA
    UAAAACAAAAAqAAAAAAAAAAAAAAAAAAAAkgAAAGYAAAAAAAAAAAAAAD4AAAC8AAAALwAAAD4AAAC/
    AAAAKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAIgAAALEAAACRAAAAsQAAAFkAAAAAAAAAAAAAADwAAADUAAAApwAAABEAAAAAAAAASwAA
    AKoAAAAGAAAAEQAAALcAAAAzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIgAAALwAAADBAAAARAAAADcAAABTAAAAvgAAAGMAAACi
    AAAAbgAAAAAAAAAZAAAAuQAAAD8AAABXAAAArQAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIgAAAJYAAACvAAAArgAA
    AMIAAADEAAAALgAAAJUAAAB+AAAAAAAAAAAAAABhAAAAwAAAAMIAAABJAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAABAAAAAkAAAAJAAAAEgAAAH0AAAC+AAAA0QAAAJ4AAAAPAAAAAAAAAAoAAACWAAAAggAAAAQA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAABgAAAAeAAAAngAAAJcAAAAQAAAA
    AAAAAAkAAAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAUAAAAnwAAAJcAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAnwAAAJcAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAnwAAAIwAAAAFAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV
    AAAARwAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD////////4AP//+ADw//j84P/4
    DMD/+AyAz/jMAIf4zAAD+AwAA/gMAAP4DBAB+ADwAPgA4AB8AOAAPADgADwA8AOMAP4HhAD/A8AA
    /4Djh//A8wP/4HMD//BhA//4AQP//AGH//4Ah///4E////w////+H////w////+P/////ygAAAAw
    AAAAYAAAAAEAIAAAAAAAACQAAMMOAADDDgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAAB
    AAAAAQAAAAEAAAABAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABJAAAAngAAAKQAAACkAAAA
    pAAAAKQAAACkAAAApAAAAKQAAACkAAAApAAAAKQAAACkAAAAoAAAAGoAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAoAAAC8AAAA5gAAALwAAAC8AAAAvAAAALwAAAC8AAAAvAAAALwAAAC8AAAAvAAAALwAAAC7AAAA
    2QAAAPcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAoAAAAIAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0AAADJAAAAlwAAAAYAAAAHAAAABwAAAAcAAAAHAAAABwAA
    AAcAAAAHAAAABwAAAAcAAAADAAAAcAAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAA
    YAAAAMAAAAC5AAAATQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0AAADJAAAAlAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbAAAAP8AAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAUAAABxAAAA7gAAALQAAADCAAAA3AAAACkAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAA0AAADHAAAAwwAAAGwAAABsAAAAbQAAAG0AAABtAAAATwAAAAgAAAAAAAAAAAAAAAAA
    AAAAAAAAbAAAAP8AAAAAAAAAAAAAAAAAAAAAAAAABQAAAHEAAADvAAAAjwAAAAkAAABDAAAA7gAA
    AE0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0AAADFAAAA9QAAAOAAAADgAAAA4AAAAN8AAADn
    AAAA7gAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAbAAAAP8AAAAAAAAAAAAAAAAAAAAFAAAAcQAAAO8A
    AACPAAAACwAAABMAAACmAAAA3gAAACoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0AAADIAAAA
    ogAAAB4AAAAfAAAAHwAAAB0AAABMAAAA7AAAAFMAAAAAAAAAAAAAAAAAAAAAAAAAbAAAAP8AAAAA
    AAAAAAAAAAUAAABxAAAA7wAAAI8AAAALAAAAEwAAAKMAAADoAAAAWwAAAAEAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAA0AAADJAAAAlAAAAAAAAAAAAAAAAAAAAAAAAAAyAAAA6QAAAFMAAAAAAAAA
    AAAAAAAAAAAAAAAASQAAALsAAAAAAAAABQAAAHEAAADvAAAAjwAAAAsAAAAUAAAAowAAAP8AAACG
    AAAAAgAAAAAAAAAAAAAAAAAAAAAAAAACAAAALQAAACcAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0AAADJAAAAlAAAAAAAAAAAAAAAAAAA
    AAAAAAAzAAAA6QAAAFMAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAkAAAAFAAAAcAAAAO8AAACPAAAA
    CwAAABQAAACkAAAA6QAAANUAAADYAAAAQAAAAAAAAAAAAAAAAAAAAAEAAABXAAAA5AAAANoAAABF
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0A
    AADJAAAAlAAAAAAAAAAAAAAAAAAAAAAAAAAzAAAA6QAAAFMAAAAAAAAAAAAAAAAAAAAAAAAAEwAA
    ADgAAAB0AAAA7QAAAI8AAAALAAAAEwAAAKMAAADoAAAAWgAAACYAAADAAAAA2wAAAEAAAAAAAAAA
    AQAAAFcAAADnAAAAsgAAAL4AAADdAAAAQwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAA0AAADJAAAAlAAAAAAAAAAAAAAAAAAAAAAAAAAyAAAA6QAAAFMA
    AAAAAAAAAAAAAAAAAAAAAAAAYQAAAO4AAADuAAAAogAAAAoAAAAUAAAAowAAAP8AAAC4AAAAEQAA
    AAAAAAAlAAAAwAAAANsAAABBAAAAVgAAAOgAAACpAAAAFAAAAC0AAADiAAAAsgAAAAYAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0AAADIAAAAsgAAAEQAAABF
    AAAARQAAAEMAAABqAAAA7gAAAFIAAAAAAAAAAAAAAAAAAAAAAAAAbAAAAP8AAAD1AAAAlwAAACgA
    AAClAAAA5wAAAKIAAADqAAAAkgAAAA0AAAAAAAAAJQAAAL4AAADlAAAA6wAAAKgAAAAWAAAACgAA
    AIgAAADwAAAAbQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAA0AAADFAAAA+gAAAOsAAADrAAAA6wAAAOsAAADuAAAA2wAAADQAAAAAAAAAAAAAAAAAAAAA
    AAAAbAAAAP8AAACKAAAA7AAAAOkAAADkAAAAWwAAAAYAAABtAAAA7wAAAJIAAAANAAAAAAAAAHEA
    AAD7AAAAqAAAABYAAAAKAAAAiQAAAPgAAADxAAAAWQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0AAADIAAAArgAAADwAAAA9AAAAPQAAAD0AAAA+AAAA
    KQAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAbAAAAP8AAAAKAAAASgAAAGwAAAA2AAAAAgAAAAAAAAAE
    AAAAbgAAAO4AAACRAAAAYQAAAOcAAACoAAAAFgAAAAoAAACJAAAA7QAAAIIAAACqAAAA5wAAAFUA
    AAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0AAADJAAAAlAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbAAAAP8AAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAG4AAADwAAAA9gAAAKgAAAAWAAAACQAAAIkAAAD8
    AAAAmAAAAAUAAAAXAAAAqwAAAOcAAABVAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAA0AAADJAAAAoQAAAB0AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAA
    AB4AAAAaAAAAfQAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFoAAADxAAAA
    qAAAABYAAAAKAAAAiQAAAO0AAADdAAAA1wAAAEAAAAAAAAAAGAAAAKsAAADnAAAAVQAAAAEAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAACvAAAA9AAAAN4AAADeAAAA3wAAAN8A
    AADfAAAA3wAAAN8AAADfAAAA3wAAAN4AAADdAAAA7QAAAOkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAABAAAAVwAAAOgAAACoAAAAFgAAAAkAAACJAAAA7QAAAHQAAAArAAAAwAAAANsAAABAAAAA
    AAAAABYAAACxAAAA6QAAAFUAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAq
    AAAAaQAAAMMAAADhAAAAdgAAAG8AAABvAAAAbwAAAG8AAABvAAAAcAAAAM4AAADXAAAAcAAAAEAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAABXAAAA6AAAAKkAAAAWAAAACQAAAIkAAAD9AAAAxAAA
    ABYAAAAAAAAAJQAAAMAAAADbAAAAPwAAABgAAACzAAAA+wAAAOUAAABVAAAAAQAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJIAAADJAAAADQAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAgAAAKcAAAC3AAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADoAAADmAAAAqgAAABUA
    AAAJAAAAiQAAAOwAAACxAAAA6gAAAJIAAAANAAAAAAAAACUAAAC/AAAA2gAAAMIAAADjAAAAYgAA
    AKkAAADnAAAAVQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAQgAAAMQAAADiAAAA
    fAAAAHUAAAB1AAAAdQAAAHUAAAB1AAAAdgAAANAAAADZAAAAVAAAAAgAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAEYAAADxAAAAlAAAABUAAACIAAAA9AAAAHkAAAAJAAAAbQAAAO4AAACSAAAADQAAAAAA
    AAA/AAAA7QAAAOYAAABRAAAAAAAAABgAAACsAAAA3wAAACsAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAeAAAA2AAAAOoAAADaAAAA3AAAANwAAADcAAAA3AAAANwAAADcAAAA3AAAANsAAADkAAAA
    6QAAAD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAABzAAAA7AAAAMwAAADyAAAA9gAAAHwAAAAF
    AAAABAAAAG4AAADuAAAAkQAAACcAAACtAAAA4wAAAFEAAAAAAAAAAAAAAAAAAAAZAAAAXwAAABYA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqAAAA5wAAAG8AAAAXAAAAGwAAABsAAAAbAAAAGwAA
    ABsAAAAbAAAAGwAAABgAAABQAAAA6gAAAFEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAA
    cAAAANIAAAB2AAAAhwAAAO8AAAB6AAAABgAAAAQAAABsAAAA6gAAAN8AAADjAAAAUQAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAMAAABfAAAATAAAAAEAAAAAAAAAAAAAAAAAAAApAAAA5gAAAF4A
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6AAAA6QAAAFEAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAABMAAAADAAAACQAAAIUAAADwAAAAegAAAAUAAAAgAAAA
    0QAAAOgAAABRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAACZAAAA6AAAAFUAAAAB
    AAAAAAAAAAAAAAAoAAAA5gAAAKYAAABuAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAG4A
    AACSAAAA7gAAAE8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAkAAACFAAAA7wAAAIcAAACtAAAA5AAAAFEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAYAAAAqwAAAOcAAABVAAAAAQAAAAAAAAAPAAAAowAAAN8AAADeAAAA3gAAAN4AAADe
    AAAA3gAAAN4AAADeAAAA3gAAAN4AAADfAAAAtwAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAhQAAAPgAAADxAAAAVgAAAAAAAAAhAAAARAAA
    AAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAKsAAADnAAAAUwAAAAAAAAAAAAAA
    DAAAAB0AAAAdAAAAHQAAAB0AAAAdAAAAHQAAAB0AAAAdAAAAHQAAAB0AAAAdAAAAEAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQAAAIUA
    AADwAAAAeAAAACsAAADBAAAAwQAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    ABgAAAC0AAAAzwAAABUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAkAAACFAAAA7QAAAN8AAADYAAAAQAAAAAAAAAALAAAABAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsAAAA4QAAACEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAEAAAASAAAAHgAAAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAhQAAAPsAAACb
    AAAABgAAADIAAAC2AAAASgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABmAAAA4gAAACMA
    AAAAAAAAAAAAAAAAAAAAAAAACwAAAHIAAADOAAAA4AAAAMMAAABZAAAABAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAACQAAAIUAAADtAAAAlAAAAMwAAADPAAAAKwAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAABhAAAA5AAAACUAAAAAAAAAAAAAAAAAAAAAAAAAcQAAAO8AAACfAAAAcQAAALMA
    AADqAAAATAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkAAACFAAAA+gAAAOUAAAA5AAAA
    AAAAADkAAABRAAAAAwAAAAAAAAAAAAAAAAAAAAAAAABiAAAA5QAAACcAAAAAAAAAAAAAAAAAAAAP
    AAAAyQAAAKMAAAAHAAAAAAAAABUAAADIAAAAogAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAJAAAAhQAAAO8AAAB3AAAARwAAAN0AAACoAAAABwAAAAAAAAAAAAAAAAAAACIAAAC9AAAA
    +AAAAGMAAAABAAAAAAAAAAAAAAAVAAAA1gAAAIYAAAAAAAAAAAAAAAUAAACyAAAAswAAAAUAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQAAAIUAAADvAAAA7QAAAL0AAAAhAAAAAAAA
    AAAAAAAAAAAAIgAAALsAAADeAAAAvAAAAOYAAABMAAAAAAAAAAAAAAAFAAAAqAAAAMYAAAATAAAA
    AAAAACoAAADhAAAAfgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkA
    AACFAAAA+AAAAJsAAABIAAAARwAAAEIAAABIAAAAuwAAAN0AAABEAAAAFgAAAMEAAACzAAAABwAA
    AAAAAAAAAAAASwAAAO0AAABnAAAAAgAAAJAAAADfAAAAKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKAAAAggAAAOgAAADrAAAA6wAAAOsAAADtAAAA/gAAAJkA
    AAAGAAAABQAAAKoAAADAAAAACgAAAAAAAAAAAAAACAAAAKIAAADXAAAAbwAAAOgAAAB6AAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAACwAAAA5
    AAAAPAAAAD8AAABBAAAAkgAAAO0AAACYAAAAlgAAAPYAAACVAAAAAQAAAAAAAAAAAAAAAAAAACsA
    AADXAAAA+wAAALwAAAAVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAHoAAADVAAAA0wAAAM8AAADh
    AAAATgAAAAAAAAAAAAAAAAAAAAAAAABaAAAAwAAAADwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAIAAAAVAAAAFAAAAB4AAACxAAAA5AAAAE8AAAAAAAAAAAAAAAAAAAADAAAADQAAAAEAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbAAAAsgAAAOQAAABPAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAGwAAALEAAADkAAAATwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsAAACxAAAA5QAAAE8AAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAbAAAAsQAAAOQAAABPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGwAAALEAAADjAAAANgAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAACA
    AAAALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    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
"""
icondata = base64.b64decode(icon)
tempFile = "icon.ico"
iconfile = open(tempFile,"wb")
iconfile.write(icondata)
iconfile.close()
root = Tk()
root.wm_iconbitmap(tempFile)
os.remove(tempFile)

root.title("Mg/Kg Dose Calculator")
root.geometry("450x650")

my_notebook = ttk.Notebook(root)
my_notebook.pack(fill = BOTH, expand = True)

DialogFont = font.Font(family= 'Georgia', size = 10, weight = 'bold')

DialogFont2 = font.Font(family= 'Georgia', size = 10)

NumFont = font.Font(family= 'Georgia', size = 14, weight = "bold")

NumFont2 = font.Font(family= 'Georgia', size = 10, weight = "bold")

UndrFont = font.Font(family= 'Georgia', size = 9,
underline = 1)

StrkFont = font.Font(family= 'Georgia', size = 9, 
overstrike = 1)

UndrStrkFont = font.Font(family= 'Georgia', size = 9, 
overstrike = 1, underline = 1)



# Control for the Different Frame Containers

frameopt = LabelFrame(root, 
text = "Calculation Method Selection", 
font = DialogFont2, fg = "red", labelanchor =  "n")
frameopt.pack()
my_notebook.add(frameopt, 
text = "Calc Select")

frame1 = LabelFrame(root, 
text = "Milligrams Per Killograms for a Total Solution Volume",
font = DialogFont2, fg = "red", labelanchor =  "n")
frame1.pack()
my_notebook.add(frame1, text = "Soln Vol")

frame2 = LabelFrame(root, 
text = "Milligrams Per Killograms for an Unlimited Number of Animal Weights",
font = DialogFont2, fg = "red", labelanchor = "n")
frame2.pack()
my_notebook.add(frame2, text = "Weight Inputs")

frame3 = LabelFrame(root, 
text = "Milligrams Per Killograms for Total Animal Weight",
font = DialogFont2, fg = "red", labelanchor =  "n")
frame3.pack()
my_notebook.add(frame3, text = "Tot Weight")

frame4 = LabelFrame(root, 
text = "Calculation Explainantion and Reference",
font = DialogFont2, fg = "red", labelanchor =  "n")
frame4.pack()
my_notebook.add(frame4, text = "Calc Ref")

# Main Control Logic for Frameopt Widgets

# Functions for hiding unselected tabs

def hide0():
    my_notebook.hide(0)

def hide1():
    my_notebook.hide(1)

def hide2():
    my_notebook.hide(2)

def hide3():
    my_notebook.hide(3)

def hide4():
    my_notebook.hide(4)

# Functions for showing selected tab

def ToTab0():
    my_notebook.select(0)
    
def ToTab1():
    my_notebook.select(1)

def ToTab2():
    my_notebook.select(2)

def ToTab3():
    my_notebook.select(3)

def ToTab4():
    my_notebook.select(4)

hide1(), hide2(), hide3(), hide4()

Calc_Opt_Label = Label(frameopt, text = "Click on the button which \n"
"describes the method of mg/kg dose \n"
"calculation to be used", 
font =  DialogFont, fg = "blue")
Calc_Opt_Label.place(relx = .5, rely = .1, anchor = 'center')

Opt1Button = Button(frameopt, text = "Milligrams Per Killograms for \n"
"Total Solution Volume \n" "(Milliliters)", 
command = lambda: [hide0(), hide2(), hide3(), hide4(), ToTab1()], 
borderwidth = 6, relief = "raised", font = DialogFont, fg = "green")
Opt1Button.place(relx = .5, rely = .25, anchor = 'center')

Opt2Button = Button(frameopt, text = "Milligrams Per Killograms for \n"
"Unlimited Animal Weights \n" "(Grams)", 
command = lambda: [hide0(), hide1(), hide3(), hide4(), ToTab2()], 
borderwidth = 6, relief = "raised", font = DialogFont, fg = "green")
Opt2Button.place(relx = .5, rely = .45, anchor = 'center')

Opt3Button = Button(frameopt, text = "Milligrams Per Killograms for \n"
"Total Animal Weight \n" "(Grams)", 
command = lambda: [hide0(), hide1(), hide2(), hide4(), ToTab3()], 
borderwidth = 6, relief = "raised", font = DialogFont, fg = "green")
Opt3Button.place(relx = .5, rely = .65, anchor = 'center')

Opt3Button = Button(frameopt, 
text =
"Conversion Methods \n"
"&\n" 
"Sample Calculations",
command = lambda: [hide0(), hide1(), hide2(), hide3(), ToTab4()], 
borderwidth = 6, relief = "raised", font = DialogFont2, fg = "green")
Opt3Button.place(relx = .5, rely = .875, anchor = 'center')

# MAIN CONTROL LOGIC FOR FRAME 1 WIDGETS

Dose_Label = Label(frame1, text = "What dose of Mg per Kg \
would you like to use?", 
font =  DialogFont, foreground = "blue")
Dose_Label.place(relx = .5, rely = .06, anchor = 'center')

StrtDoseTextbox = Entry(frame1, 
justify = 'center', font = NumFont, fg = "grey", width = 10)
StrtDoseTextbox.place(relx = .5, rely = .11, anchor = 'center')

MgperKgLab1 = Label(frame1, 
text = "Mg/Kg",
font = DialogFont, fg = "blue")
MgperKgLab1.place(relx = .71, rely = .11, anchor = 'center')

Total_Vol = Label(frame1, text = "What is the total \
volume of solution in mL \n"
"you would like to disolve your drug into?", 
font =  DialogFont, fg = "blue")
Total_Vol.place(relx = .5, rely = .2, anchor = 'center')

Total_VolTextbox = Entry(frame1, 
justify = 'center', font = NumFont, fg = "grey", width = 10)
Total_VolTextbox.place(relx = .5, rely = .27, anchor = 'center')

mLLab1 = Label(frame1, 
text = "mL",
font = DialogFont, fg = "blue")
mLLab1.place(relx = .69, rely = .27, anchor = 'center')

def Mg_calc(): 
    MgAmt = round((float(StrtDoseTextbox.get())) * (float(Total_VolTextbox.get())), 5)
    MgTextbox["text"] = (MgAmt)

def MgToGrams():
    Gram = round(float(StrtDoseTextbox.get()) * float(Total_VolTextbox.get()) /1000, 5)
    GramTextbox["text"] = (Gram)
    
def Disp1():
    MgTextbox.place(relx = .5, rely = .51, anchor = 'center')

def Disp1Mg():
    MgLab1.place(relx = .68, rely = .51, anchor = 'center')

def Disp2():
    GramTextbox.place(relx = .5, rely = .63, anchor = 'center')

def Disp1G():
    GLab1.place(relx = .68, rely = .63, anchor = 'center')
  

myButton1 = Button(frame1, text = "Submit",
borderwidth = 6, relief = "raised", font =  DialogFont, fg = "green", 
command = lambda: [Disp1(), Disp2(), Mg_calc(), MgToGrams(), Disp1Mg(), Disp1G()])
myButton1.place(relx = .5, rely = .35, anchor = 'center')

Mg_to_UseVol = Label(frame1, 
text = "The Mg needed for the above solution volume is:",
font = DialogFont, fg = "blue")
Mg_to_UseVol.place(relx = .5, rely = .46, anchor = 'center')

MgTextbox = Label(frame1, 
borderwidth = 3, relief = "sunken",
font = NumFont, width = 10, bg = "white")

MgLab1 = Label(frame1, 
text = "Mg",
font = DialogFont, fg = "blue")

Mg_in_Gram = Label(frame1, 
text = "The Mg amount above expressed in grams is:",
font = DialogFont, fg = "blue")
Mg_in_Gram.place(relx = .5, rely = .58, anchor = 'center')

GramTextbox = Label(frame1, 
borderwidth = 3, relief = "sunken", 
font = NumFont, width = 10, bg = "white")

GLab1 = Label(frame1, 
text = "G",
font = DialogFont, fg = "blue")

RtnOptButt1 = Button(frame1, 
text = "Return to Calculation Selection Method Options", 
command = lambda: [hide1(), hide2(), hide3(), ToTab0()], 
borderwidth = 6, relief = "raised", font =  DialogFont, fg = "green")
RtnOptButt1.place(relx = .5, rely = .9, anchor = 'center')

# MAIN CONTROL LOGIC FOR FRAME 2 WIDEGETS

Rat_Number = Label(frame2, text = "How many animal weights would \
you like to enter?",
font =  DialogFont, fg = "blue")
Rat_Number.place(relx = .5, rely = .06, anchor = 'center')

NumofRatsTextbox = Entry(frame2, 
justify = 'center', font = NumFont, fg = "grey", width = 10)
NumofRatsTextbox.place(relx = .5, rely = .11, anchor = 'center')

myButton2 = Button(frame2, 
text = "Submit Number of Animals to Enter", 
borderwidth = 6, relief = "raised", font =  DialogFont, fg = "green", 
command = lambda: [HowManyAnimals()])
myButton2.place(relx = .5, rely = .18, anchor = 'center')

def HowManyAnimals():

    EntryWindow = Toplevel()

    icondata = base64.b64decode(icon)
    tempFile = "icon.ico"
    iconfile = open(tempFile,"wb")
    iconfile.write(icondata)
    iconfile.close()
    EntryWindow.wm_iconbitmap(tempFile)
    os.remove(tempFile)

    EntryWindow.title("Weights Grams")
    EntryWindow.geometry()

    EntryWin = Label(EntryWindow, text = 
    "Enter individual animal weights in grams below", 
    font =  DialogFont, fg = "blue")
    EntryWin.grid(row = 0, column = 0)

    RowCount = int(NumofRatsTextbox.get())

    for x in range(6, (RowCount) + 6):
        RatEntryTextbox = Entry(EntryWindow, 
        justify = 'center', font = NumFont, fg = "grey", width = 10)
        RatEntryTextbox.grid(row = x, column = 0, padx = 15, pady = 5)
        Animal_Entries.append(RatEntryTextbox)

    myButton3 = Button(EntryWindow, 
    text = "Calculate Total Animal Weight", 
    borderwidth = 6, relief = "raised", font =  DialogFont, fg = "green",
    command = lambda: [totanidisp(), dose2usedisp(), 
    buttdisp(), AnimalWeightSum(), Disp2G(), MgperKgDisp2()])
    myButton3.grid(row = 100, column = 0, padx = 5, pady = 10)    


Animal_Entries = []

def AnimalWeightSum():
    WeightSum_List = 0

    for RatEntryTextbox in Animal_Entries:
        WeightSum_List += float(RatEntryTextbox.get())
        TotRatWeightTextbox["text"] = float(WeightSum_List)
        

TotalRatWeight = Label(frame2, text = "The total weight in grams of your \
animals is: ", 
font =  DialogFont, fg = "blue")
TotalRatWeight.place(relx = .5, rely = .25, anchor = 'center')

TotRatWeightTextbox = Label(frame2, 
borderwidth = 3, relief = "sunken",
font = NumFont, width = 10, bg = "white")

def totanidisp():
    TotRatWeightTextbox.place(relx = .5, rely = .3, anchor = 'center')

GrLab2 = Label(frame2, 
text = "G",
font = DialogFont, fg = "blue")

def Disp2G():
    GrLab2.place(relx = .67, rely = .3, anchor = 'center')

Dose_Label = Label(frame2, text = "What dose of Mg per Kg \
would you like to use?",
font =  DialogFont, fg = "blue")
Dose_Label.place(relx = .5, rely = .35, anchor = 'center')

MgDoseTextbox = Entry(frame2, 
justify = 'center', font = NumFont, fg = "grey", width = 10)

def dose2usedisp():
    MgDoseTextbox.place(relx = .5, rely = .4, anchor = 'center')

MgKgLab2 = Label(frame2,
text = "Mg/Kg",
font = DialogFont, fg = "blue")

def MgperKgDisp2():
    MgKgLab2.place(relx = .71, rely = .4, anchor = 'center')

MinSolVol = Label(frame2, 
text = "The suggested minimum solution volume in mL\n"
"includes total animal weight plus an additional 10% :", 
font =  DialogFont, fg = "blue")
MinSolVol.place(relx = .5, rely = .55, anchor = 'center')

SolnVolTextbox = Label(frame2, 
borderwidth = 3, relief = "sunken",
font = NumFont, width = 10, bg = "white")

def SolVolDisp():
    SolnVolTextbox.place(relx = .5, rely = .62, anchor = 'center')

def TotSolVolUnlim():
    WeightSum_List = 0

    for RatEntryTextbox in Animal_Entries:
        WeightSum_List += float(RatEntryTextbox.get())
        TotRatWeightTextbox["text"] = (WeightSum_List)

    MgAmount = (WeightSum_List)
    SolnVolUnlim = round((((float(MgAmount) * 0.1)
    + (float(MgAmount)))) / 1000, 5)
    SolnVolTextbox["text"] = SolnVolUnlim

mLLabel2 = Label(frame2,
text = "mL",
font = DialogFont, fg = "blue")

def mLLab2():
    mLLabel2.place(relx = .68, rely = .62, anchor = 'center')
def DoseCalculation():
    WeightSum_List = 0

    for RatEntryTextbox in Animal_Entries:
        WeightSum_List += float(RatEntryTextbox.get())
        TotRatWeightTextbox["text"] = (WeightSum_List)

    MgAmount = (WeightSum_List)
    MgUnlim = round((((float(MgAmount) * 0.1)
    + (float(MgAmount)))) / 1000 * \
    (float(MgDoseTextbox.get())), 5)
    TotMillGsTextbox["text"] = MgUnlim

def TotGram():
    WeightSum_List = 0

    for RatEntryTextbox in Animal_Entries:
        WeightSum_List += float(RatEntryTextbox.get())
        TotRatWeightTextbox["text"] = (WeightSum_List)

    MgAmount = (WeightSum_List)
    GramAmount = round((((float(MgAmount) * 0.1)
    + (float(MgAmount)))) / 1000000 * \
    (float(MgDoseTextbox.get())), 5)
    GTextbox["text"] = GramAmount

myButton4 = Button(frame2, text = "Submit", 
borderwidth = 6, relief = "raised", font =  DialogFont, fg = "green",
command = lambda: [SolVolDisp(), TotMillDisp(), GTextDisp(), 
TotSolVolUnlim(), DoseCalculation(), TotGram(), mLLab2(), MgLab2(), GrmLab2()])

def buttdisp():
    myButton4.place(relx = .5, rely = .47, anchor = 'center')



MgLabel2 = Label(frame2,
text = "Mg",
font = DialogFont, fg = "blue")

def MgLab2():
    MgLabel2.place(relx = .68, rely = .72, anchor = 'center')

GrLabel2 = Label(frame2,
text = "G",
font = DialogFont, fg = "blue")

def GrmLab2():
    GrLabel2.place(relx = .67, rely = .82, anchor = 'center')

Mg_to_Use = Label(frame2, 
text = "The Mg needed for the above solution volume is:", 
font =  DialogFont, fg = "blue")
Mg_to_Use.place(relx = .5, rely = .67, anchor = 'center')

TotMillGsTextbox = Label(frame2, 
borderwidth = 3, relief = "sunken",
font = NumFont, width = 10, bg = "white")

def TotMillDisp():
    TotMillGsTextbox.place(relx = .5, rely = .72, anchor = 'center')

Mg_in_Grams = Label(frame2, 
text = "The Mg amount above expressed in grams is:", 
font =  DialogFont, fg = "blue")
Mg_in_Grams.place(relx = .5, rely = .77, anchor = 'center')

GTextbox = Label(frame2, 
borderwidth = 3, relief = "sunken",
font = NumFont, width = 10, bg = "white")

def GTextDisp():
    GTextbox.place(relx = .5, rely = .82, anchor = 'center')

RtnOptButt2 = Button(frame2, 
text = "Return to Calculation Selection Method Options",
borderwidth = 6, relief = "raised", font =  DialogFont, fg = "green",
command = lambda: [hide1(), hide2(), hide3(), ToTab0()])
RtnOptButt2.place(relx = .5, rely = .9, anchor = 'center')

# MAIN CONTROL LOGIC FOR FRAME 3 WIDEGETS

def dose_calc():
    amount = round((((float(NumberofRatsTextbox.get()) * 0.1)
    + (float(NumberofRatsTextbox.get())))) / 1000000 * \
    (float(DoseTextbox.get())), 5)
    GramsTextbox["text"] = amount 

def TotSolVol():
    SoVol = round((((float(NumberofRatsTextbox.get()) * 0.1)
    + (float(NumberofRatsTextbox.get())))) / 1000, 5)
    SolVolTextbox["text"] = SoVol

def TotMg():
    Mg = round((((float(NumberofRatsTextbox.get()) * 0.1)
    + ((float(NumberofRatsTextbox.get())))) / 1000) * \
    (float(DoseTextbox.get())), 5)
    TotMgTextbox["text"] = Mg

def lab5():
    SolVolTextbox.place(relx = .5, rely = .47, anchor = 'center')

def lab6 ():
    TotMgTextbox.place(relx = .5, rely = .57, anchor = 'center')

def lab7():
    GramsTextbox.place(relx = .5, rely = .67, anchor = 'center')

def mLlab5():
    mLlab3.place(relx = .68, rely = .47, anchor = 'center')

def Mglab6 ():
    Mglab3.place(relx = .68, rely = .57, anchor = 'center')

def Glab7():
    Glab3.place(relx = .67, rely = .67, anchor = 'center')

Dose_Label = Label(frame3, 
text = "What dose of Mg per Kg would you like to use?", 
font =  DialogFont, fg = "blue")
Dose_Label.place(relx = .5, rely = .06, anchor = 'center')

DoseTextbox = Entry(frame3, 
justify = 'center', font = NumFont, fg = "grey", width = 10)
DoseTextbox.place(relx = .5, rely = .11, anchor = 'center')

MgperKgLab3 = Label(frame3, 
text = "Mg/Kg",
font = DialogFont, fg = "blue")
MgperKgLab3.place(relx = .71, rely = .11, anchor = 'center')

Rat_Number = Label(frame3, 
text = "What is the total weight in grams, of your animals?",
font =  DialogFont, fg = "blue")
Rat_Number.place(relx = .5, rely = .17, anchor = 'center')

NumberofRatsTextbox = Entry(frame3, 
justify = 'center', font = NumFont, fg = "grey", width = 10)
NumberofRatsTextbox.place(relx = .5, rely = .22, anchor = 'center')

GLab2 = Label(frame3, 
text = "G",
font = DialogFont, fg = "blue")
GLab2.place(relx = .67, rely = .22, anchor = 'center')

myButton5 = Button(frame3, text = "Submit", 
command = lambda: [lab5(), lab6(), lab7(), dose_calc(), TotSolVol(), TotMg(), mLlab5(), Mglab6(), Glab7()],
borderwidth = 6, relief = "raised", font = DialogFont, fg = "green", )
myButton5.place(relx = .5, rely = .3, anchor = 'center')

MinSolVol = Label(frame3, 
text = "The suggested minimum solution volume in mL\n"
"includes total animal weight plus an additional 10% :", 
font =  DialogFont, fg = "blue")
MinSolVol.place(relx = .5, rely = .4, anchor = 'center')

SolVolTextbox = Label(frame3, 
borderwidth = 3, relief = "sunken",
font = NumFont, width = 10, bg = "white")

mLlab3 = Label(frame3,
text = "mL",
font = DialogFont, fg = "blue")

Mg_to_Use = Label(frame3, 
text = "The Mg needed for the above solution volume is:", 
font =  DialogFont, fg = "blue")
Mg_to_Use.place(relx = .5, rely = .52, anchor = 'center')

TotMgTextbox = Label(frame3, 
borderwidth = 3, relief = "sunken",
font = NumFont, width = 10, bg = "white")

Mglab3 = Label(frame3,
text = "Mg",
font = DialogFont, fg = "blue")

Mg_in_Grams = Label(frame3, 
text = "The Mg amount above expressed in grams is:", 
font =  DialogFont, fg = "blue")
Mg_in_Grams.place(relx = .5, rely = .62, anchor = 'center')

GramsTextbox = Label(frame3, 
borderwidth = 3, relief = "sunken",
font = NumFont, width = 10, bg = "white")

Glab3 = Label(frame3,
text = "G",
font = DialogFont, fg = "blue")

RtnOptButt3 = Button(frame3, 
text = "Return to Calculation Selection Method Options",
borderwidth = 6, relief = "raised", font = DialogFont, fg = "green",
command = lambda: [hide1(), hide2(), hide3(), ToTab0()])
RtnOptButt3.place(relx = .5, rely = .9, anchor = 'center')

# MAIN CONTROL LOGIC FOR FRAME 4 WIDGETS

# Weight in grams to kilograms example

Gram2Kil = Label(frame4,
text = 
"Animal weight as expressed in kilograms \n"
"Grams to kilograms convertion: 1,000g = 1kg \n",
font =  DialogFont2, fg = "blue")
Gram2Kil.place(relx = .5, rely = .07, anchor = 'center')

randMgKgButt1 = Button(frame4, 
text = "View dimentional analysis",
borderwidth = 6, relief = "raised", font = DialogFont2, fg = "green",
command = lambda: [GramtoKilosEx()])
randMgKgButt1.place(relx = .5, rely = .12, anchor = 'center')

    
def GramtoKilosEx():

    EntryWindow = Toplevel()

    icondata = base64.b64decode(icon)
    tempFile = "icon.ico"
    iconfile = open(tempFile,"wb")
    iconfile.write(icondata)
    iconfile.close()
    EntryWindow.wm_iconbitmap(tempFile)
    os.remove(tempFile)

    EntryWindow.title("Grams to Kilograms Example Calculation")
    EntryWindow.geometry("430x115")

    def randWeight():
        import random
        rWeight = random.randint(0,10000)
        randWeightTextbox["text"] = rWeight
        rMg = round((float(rWeight)) / (float(1000)), 3)
        SampGtoMTextbox["text"] = rMg

    randMgKgButtsamp1 = Button(EntryWindow, 
    text = "Run sample calculation",
    borderwidth = 6, relief = "raised", font = DialogFont2, fg = "green",
    command = lambda: [randWeight()])
    randMgKgButtsamp1.place(relx = .5, rely = .75, anchor = 'center')

    spacetxtbx = Label(EntryWindow,
    text = "      ")
    spacetxtbx.grid(row = 0, column = 0)

    randWeightTextbox = Label(EntryWindow, 
    borderwidth = 3, relief = "sunken",
    font = NumFont2, width = 5, bg = "white")
    randWeightTextbox.grid(row = 2, column = 1, padx = 0, pady = 0)

    Gramlab1 = Label(EntryWindow,
    text = "grams",
    font =  StrkFont, fg = "blue")
    Gramlab1.grid(row = 2, column = 2)

    KgConislab = Label(EntryWindow,
    text = "x",
    font =  DialogFont2, fg = "blue")
    KgConislab.grid(row = 2, column = 3)

    HunLlab = Label(EntryWindow,
    text = "1000     ",
    font = DialogFont2, fg = "blue")
    HunLlab.grid(row = 3, columnspan = 9)

    Gramlab2 = Label(EntryWindow,
    text = "grams",
    font =  StrkFont, fg = "blue")
    Gramlab2.grid(row = 3, column = 6)

    KgConlab = Label(EntryWindow,
    text = "         1 kilograms           ",
    font =  UndrFont, fg = "blue")
    KgConlab.grid(row = 2, column = 6)

    KgConislab = Label(EntryWindow,
    text = "=",
    font =  DialogFont2, fg = "blue")
    KgConislab.grid(row = 2, column = 7)

    SampGtoMTextbox = Label(EntryWindow, 
    borderwidth = 3, relief = "sunken",
    font = NumFont2, width = 5, bg = "white")
    SampGtoMTextbox.grid(row = 2, column = 8)

    KgConlabend = Label(EntryWindow,
    text = "kilograms",
    font =  DialogFont2, fg = "blue")
    KgConlabend.grid(row = 2, column = 9)

# Weight to injection volume ratio example

InjVol = Label(frame4,
text = 
"Injection volume as expressed in milliliters\n"
"Volume to animal weight ratio of .1mL to 100g\n",
font =  DialogFont2, fg = "blue")
InjVol.place(relx = .5, rely = .24, anchor = 'center')

randWeighVolButt1 = Button(frame4, 
text = "View dimentional analysis",
borderwidth = 6, relief = "raised", font = DialogFont2, fg = "green",
command = lambda: [Weight2InjVolEx()])
randWeighVolButt1.place(relx = .5, rely = .29, anchor = 'center')


def Weight2InjVolEx():

    EntryWindow = Toplevel()

    icondata = base64.b64decode(icon)
    tempFile = "icon.ico"
    iconfile = open(tempFile,"wb")
    iconfile.write(icondata)
    iconfile.close()
    EntryWindow.wm_iconbitmap(tempFile)
    os.remove(tempFile)

    EntryWindow.title("Weight to Injection Volume Example Calculation")
    EntryWindow.geometry("430x115")

    def randWttoInjVl():
        import random
        rG = random.randint(0,1000)
        randWTextbox["text"] = rG
        SamprG = round((float(rG)) / (1000), 3)
        SamprWTextbox["text"] = SamprG

    randMgKgButt4 = Button(EntryWindow, 
    text = "Run Sample Calculation",
    borderwidth = 6, relief = "raised", font = DialogFont2, fg = "green",
    command = lambda: [randWttoInjVl(),])
    randMgKgButt4.place(relx = .5, rely = .75, anchor = 'center')

    spacetxtbx = Label(EntryWindow,
    text = "      ")
    spacetxtbx.grid(row = 0, column = 0)

    randWTextbox = Label(EntryWindow, 
    borderwidth = 3, relief = "sunken",
    font = NumFont2, width = 5, bg = "white")
    randWTextbox.grid(row = 2, column = 1)

    Gramlab4 = Label(EntryWindow,
    text = "grams",
    font =  StrkFont, fg = "blue")
    Gramlab4.grid(row = 2, column = 2)

    KgConislab5 = Label(EntryWindow,
    text = "x",
    font =  DialogFont2, fg = "blue")
    KgConislab5.grid(row = 2, column = 3)

    Hundlab = Label(EntryWindow,
    text = "100",
    font =  DialogFont2, fg = "blue")
    Hundlab.grid(row = 3, columnspan = 8)

    Gramlab4 = Label(EntryWindow,
    text = "grams",
    font =  StrkFont, fg = "blue")
    Gramlab4.grid(row = 3, column = 5)

    KgConlab4 = Label(EntryWindow,
    text = "  0.1 milliliters  ",
    font =  UndrFont, fg = "blue")
    KgConlab4.grid(row = 2, column = 5)

    KgConislab4 = Label(EntryWindow,
    text = "=",
    font =  DialogFont2, fg = "blue")
    KgConislab4.grid(row = 2, column = 6)

    SamprWTextbox = Label(EntryWindow, 
    borderwidth = 3, relief = "sunken",
    font = NumFont2, width = 5, bg = "white")
    SamprWTextbox.grid(row = 2, column = 7)

    miltxt = Label(EntryWindow,
    text = "milliliters",
    font =  DialogFont2, fg = "blue")
    miltxt.grid(row = 2, column = 8)

# Grams to milligrams example

GramintaMG = Label(frame4,
text = 
"Dose calculations use milligrams while drug is weighed in grams\n"
"Milligrams to grams convertion: 1,000Mg = 1g\n",
font =  DialogFont2, fg = "blue")
GramintaMG.place(relx = .5, rely = .41, anchor = 'center')

randMgKgButt3 = Button(frame4, 
text = "View dimentional analysis",
borderwidth = 6, relief = "raised", font = DialogFont2, fg = "green",
command = lambda: [GrmtoMGEx()])
randMgKgButt3.place(relx = .5, rely = .46, anchor = 'center')


def GrmtoMGEx():

    EntryWindow = Toplevel()

    icondata = base64.b64decode(icon)
    tempFile = "icon.ico"
    iconfile = open(tempFile,"wb")
    iconfile.write(icondata)
    iconfile.close()
    EntryWindow.wm_iconbitmap(tempFile)
    os.remove(tempFile)

    EntryWindow.title("Milligrams to Grams Example Calculation")
    EntryWindow.geometry("430x115")

    def randGrmtoMG():
        import random
        rG = round(random.uniform(0,100), 3)
        randGTextbox["text"] = rG
        SamprG = round((float(rG)) / (1000), 3)
        SamprGTextbox["text"] = SamprG

    randMgKgButtsamp3 = Button(EntryWindow, 
    text = 
    "Run Sample Calculation",
    borderwidth = 6, relief = "raised", font = DialogFont2, fg = "green",
    command = lambda: [randGrmtoMG()])
    randMgKgButtsamp3.place(relx = .5, rely = .75, anchor = 'center')

    spacetxtbx = Label(EntryWindow,
    text = "      ",)
    spacetxtbx.grid(row = 0, column = 0)

    randGTextbox = Label(EntryWindow, 
    borderwidth = 3, relief = "sunken",
    font = NumFont2, width = 6, bg = "white")
    randGTextbox.grid(row = 2, column = 1)

    Gramlab3 = Label(EntryWindow,
    text = "milligrams",
    font =  StrkFont, fg = "blue")
    Gramlab3.grid(row = 2, column = 2)

    KgConislab3 = Label(EntryWindow,
    text = "x",
    font =  DialogFont2, fg = "blue")
    KgConislab3.grid(row = 2, column = 3)

    Gramlab3 = Label(EntryWindow,
    text = "          1 grams          ",
    font =  UndrFont, fg = "blue")
    Gramlab3.grid(row = 2, column = 4)

    Thoulab3 = Label(EntryWindow,
    text = "1000                     ",
    font =  DialogFont2, fg = "blue")
    Thoulab3.grid(row = 3, columnspan = 9)

    KgConlab3 = Label(EntryWindow,
    text = "milligrams",
    font =  StrkFont, fg = "blue")
    KgConlab3.grid(row = 3, column = 4)

    KgConislab3 = Label(EntryWindow,
    text = "=",
    font =  DialogFont2, fg = "blue")
    KgConislab3.grid(row = 2, column = 5)

    SamprGTextbox = Label(EntryWindow, 
    borderwidth = 3, relief = "sunken",
    font = NumFont2, width = 7, bg = "white")
    SamprGTextbox.grid(row = 2, column = 6)

    gramtxt = Label(EntryWindow,
    text = "grams",
    font =  DialogFont2, fg = "blue")
    gramtxt.grid(row = 2, column = 7)

# Milligrams weight diluted into milliliters example

MgindamL = Label(frame4,
text = 
"Mg per mL solution =\n"
"Mg of drug / mL of total solution volume\n",
font =  DialogFont2, fg = "blue")
MgindamL.place(relx = .5, rely = .58, anchor = 'center')

randMgKgButt4 = Button(frame4, 
text = "View dimentional analysis",
borderwidth = 6, relief = "raised", font = DialogFont2, fg = "green",
command = lambda: [MginMLEx()])
randMgKgButt4.place(relx = .5, rely = .63, anchor = 'center')

def MginMLEx():

    EntryWindow = Toplevel()

    icondata = base64.b64decode(icon)
    tempFile = "icon.ico"
    iconfile = open(tempFile,"wb")
    iconfile.write(icondata)
    iconfile.close()
    EntryWindow.wm_iconbitmap(tempFile)
    os.remove(tempFile)

    EntryWindow.title("Milligrams into Millileters Example Calculation")
    EntryWindow.geometry("430x115")

    def randMginmL():
        import random
        rMG = random.randint(0,100)
        rMills = random.randint(0,1000)
        randMGTextbox["text"] = rMG
        MilliLTextbox["text"] = rMills
        SamprMG = round((float(rMG)) / (float(rMills)), 3)
        SamprMGTextbox["text"] = SamprMG

    randMgKgButtsamp4 = Button(EntryWindow, 
    text = "Run Sample Calculation",
    borderwidth = 6, relief = "raised", font = DialogFont2, fg = "green",
    command = lambda: [randMginmL(),])
    randMgKgButtsamp4.place(relx = .5, rely = .75, anchor = 'center')

    spacetxtbx = Label(EntryWindow,
    text = "      ",)
    spacetxtbx.grid(row = 0, column = 0)

    randMGTextbox = Label(EntryWindow, 
    borderwidth = 3, relief = "sunken",
    font = NumFont2, width = 5, bg = "white")
    randMGTextbox.grid(row = 2, column = 1)

    Gramlab2 = Label(EntryWindow,
    text = "milligrams/",
    font =  DialogFont2, fg = "blue")
    Gramlab2.grid(row = 2, column = 2)

    MilliLTextbox = Label(EntryWindow,
    borderwidth = 3, relief = "sunken",
    font = NumFont2, width = 5, bg = "white")
    MilliLTextbox.grid(row = 2, column = 3)

    Thoulab2 = Label(EntryWindow,
    text = "milliliters =",
    font =  DialogFont2, fg = "blue")
    Thoulab2.grid(row = 2, column = 4)

    SamprMGTextbox = Label(EntryWindow, 
    borderwidth = 3, relief = "sunken",
    font = NumFont2, width = 5, bg = "white")
    SamprMGTextbox.grid(row = 2, column = 5)
    
    KgConislab2 = Label(EntryWindow,
    text = "mg/ml",
    font =  DialogFont2, fg = "blue")
    KgConislab2.grid(row = 2, column = 6)

# Entire calculation displaying all unit conversions a.k.a. total recall

AllUnits = Label(frame4,
text = 
"All calculations\n"
"Displaying all unit conversions\n",
font =  DialogFont2, fg = "blue")
AllUnits.place(relx = .5, rely = .75, anchor = 'center')

randMgKgButt4 = Button(frame4, 
text = "View dimentional analysis",
borderwidth = 6, relief = "raised", font = DialogFont2, fg = "green",
command = lambda: [TotalRecallEx4()])
randMgKgButt4.place(relx = .5, rely = .8, anchor = 'center')

# Weight in grams to kilograms for total recall example
    
def TotalRecallEx4():

    EntryWindow = Toplevel()

    icondata = base64.b64decode(icon)
    tempFile = "icon.ico"
    iconfile = open(tempFile,"wb")
    iconfile.write(icondata)
    iconfile.close()
    EntryWindow.wm_iconbitmap(tempFile)
    os.remove(tempFile)

    EntryWindow.title("All Conversions Example Calculation")
    EntryWindow.geometry("490x625")

    global img_logo

    #global ratimgbutt2 ["state"] = DISABLED

    def randWeight2():
        import random
        weightlst = [100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200, 1500, 1700, 2000,
        2400, 2800, 3000, 3500, 4000, 4500, 5000, 5500, 6000, 6500, 7000, 7500, 8000, 8500, 9000, 10000]
        x = random.choice(weightlst)
        randWeightTextbox2["text"] = x
        SampGtoMTextbox2["text"] = x/1000
        randWTextbox["text"] = x
        SamprG = round((float(x)) / (1000), 3)
        SamprWTextbox["text"] = SamprG

        milligramlst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 15, 17, 20, 25, 30, 35, 40, 45, 50, 55, 60,
        65, 70, 75, 80, 85, 90, 100, 250, 500, 1000]
        m = random.choice(milligramlst)
        randGTextbox["text"] = m
        SamprG = round((float(m)) / (1000), 3)
        SamprGTextbox["text"] = round((float(m)) / (1000), 3)
        randMGTextbox["text"] = m
        MilliLTextbox["text"] = x/1000
        SamprMG = round((float(m)) / (float(x/1000)), 3)
        SamprMGTextbox["text"] = SamprMG

    spacetxtbx = Label(EntryWindow,
    text = "      ",)
    spacetxtbx.grid(row = 0, column = 0)

    Gram2Kil2 = Label(EntryWindow,
    text = 
    "Animal weight expressed in kilograms \n"
    "Grams to kilograms convertion: 1,000g = 1kg \n",
    font =  DialogFont2, fg = "blue")
    Gram2Kil2.grid(row = 1, columnspan = 12)

    randWeightTextbox2 = Label(EntryWindow, 
    borderwidth = 3, relief = "sunken",
    font = NumFont2, width = 5, bg = "white")
    randWeightTextbox2.grid(row = 2, column = 1)

    Gramlab2 = Label(EntryWindow,
    text = "grams",
    font =  StrkFont, fg = "blue")
    Gramlab2.grid(row = 2, column = 2)

    KgConislab2 = Label(EntryWindow,
    text = "x",
    font =  DialogFont2, fg = "blue")
    KgConislab2.grid(row = 2, column = 3)

    HunLlab2 = Label(EntryWindow,
    text = "1000                   ",
    font = DialogFont2, fg = "blue")
    HunLlab2.grid(row = 3, columnspan = 9)

    Gramlab3 = Label(EntryWindow,
    text = "grams",
    font =  StrkFont, fg = "blue")
    Gramlab3.grid(row = 3, column = 4)

    KgConlab2 = Label(EntryWindow,
    text = "        1 kilograms          ",
    font =  UndrFont, fg = "blue")
    KgConlab2.grid(row = 2, column = 4)

    KgConislab2 = Label(EntryWindow,
    text = "=",
    font =  DialogFont2, fg = "blue")
    KgConislab2.grid(row = 2, column = 5)

    SampGtoMTextbox2 = Label(EntryWindow, 
    borderwidth = 3, relief = "sunken",
    font = NumFont2, width = 6, bg = "white")
    SampGtoMTextbox2.grid(row = 2, column = 6)

    KgConlabend2 = Label(EntryWindow,
    text = "kilograms",
    font =  DialogFont2, fg = "blue")
    KgConlabend2.grid(row = 2, column = 7)

# Weight to injection volume ratio for total recall example
    
    spacetxtbx = Label(EntryWindow,
    text = "      ")
    spacetxtbx.grid(row = 4, column = 0)

    InjVol = Label(EntryWindow,
    text = 
    "Injection volume expressed in milliliters\n"
    "Volume to animal weight ratio of .1mL to 100g\n",
    font =  DialogFont2, fg = "blue")
    InjVol.grid(row = 5, columnspan = 12)

    randWTextbox = Label(EntryWindow, 
    borderwidth = 3, relief = "sunken",
    font = NumFont2, width = 5, bg = "white")
    randWTextbox.grid(row = 6, column = 1)

    Gramlab4 = Label(EntryWindow,
    text = "grams",
    font =  StrkFont, fg = "blue")
    Gramlab4.grid(row = 6, column = 2)

    KgConislab5 = Label(EntryWindow,
    text = "x",
    font =  DialogFont2, fg = "blue")
    KgConislab5.grid(row = 6, column = 3)

    Hundlab = Label(EntryWindow,
    text = "100                ",
    font =  DialogFont2, fg = "blue")
    Hundlab.grid(row = 7, columnspan = 8)

    Gramlab4 = Label(EntryWindow,
    text = "grams",
    font =  StrkFont, fg = "blue")
    Gramlab4.grid(row = 7, column = 4)

    KgConlab4 = Label(EntryWindow,
    text = "    0.1 milliliters    ",
    font =  UndrFont, fg = "blue")
    KgConlab4.grid(row = 6, column = 4)

    KgConislab4 = Label(EntryWindow,
    text = "=",
    font =  DialogFont2, fg = "blue")
    KgConislab4.grid(row = 6, column = 5)

    SamprWTextbox = Label(EntryWindow, 
    borderwidth = 3, relief = "sunken",
    font = NumFont2, width = 6, bg = "white")
    SamprWTextbox.grid(row = 6, column = 6)

    miltxt = Label(EntryWindow,
    text = "milliliters",
    font =  DialogFont2, fg = "blue")
    miltxt.grid(row = 6, column = 7)

# Milligrams to grams for total recall example
        
    spacetxtbx = Label(EntryWindow,
    text = "      ")
    spacetxtbx.grid(row = 8, column = 0)

    GramintaMG = Label(EntryWindow,
    text = 
    "Dose calculations use milligrams while drug is weighed in grams\n"
    "Milligrams to grams convertion: 1,000Mg = 1g\n",
    font =  DialogFont2, fg = "blue")
    GramintaMG.grid(row = 9, columnspan  = 12)

    randGTextbox = Label(EntryWindow, 
    borderwidth = 3, relief = "sunken",
    font = NumFont2, width = 5, bg = "white")
    randGTextbox.grid(row = 10, column = 1)

    Gramlab3 = Label(EntryWindow,
    text = "milligrams",
    font =  StrkFont, fg = "blue")
    Gramlab3.grid(row = 10, column = 2)

    KgConislab3 = Label(EntryWindow,
    text = "x",
    font =  DialogFont2, fg = "blue")
    KgConislab3.grid(row = 10, column = 3)

    Gramlab3 = Label(EntryWindow,
    text = "                1 grams                ",
    font =  UndrFont, fg = "blue")
    Gramlab3.grid(row = 10, column = 4)

    Thoulab3 = Label(EntryWindow,
    text = "1000                             ",
    font =  DialogFont2, fg = "blue")
    Thoulab3.grid(row = 11, columnspan = 9)

    KgConlab3 = Label(EntryWindow,
    text = "milligrams",
    font =  StrkFont, fg = "blue")
    KgConlab3.grid(row = 11, column = 4)

    KgConislab3 = Label(EntryWindow,
    text = "=",
    font =  DialogFont2, fg = "blue")
    KgConislab3.grid(row = 10, column = 5)

    SamprGTextbox = Label(EntryWindow, 
    borderwidth = 3, relief = "sunken",
    font = NumFont2, width = 6, bg = "white")
    SamprGTextbox.grid(row = 10, column = 6)

    gramtxt = Label(EntryWindow,
    text = "grams",
    font =  DialogFont2, fg = "blue")
    gramtxt.grid(row = 10, column = 7)

# Milligrams weight diluted into milliliters for total recall example
        
    spacetxtbx = Label(EntryWindow,
    text = "      ")
    spacetxtbx.grid(row = 12, column = 0)

    MgindamL = Label(EntryWindow,
    text = 
    "Mg per mL solution =\n"
    "Milligrams of drug divided by milliters of total solution volume\n",
    font =  DialogFont2, fg = "blue")
    MgindamL.grid(row = 13, columnspan = 12)

    randMGTextbox = Label(EntryWindow, 
    borderwidth = 3, relief = "sunken",
    font = NumFont2, width = 5, bg = "white")
    randMGTextbox.grid(row = 14, column = 1)

    Gramlab2 = Label(EntryWindow,
    text = "milligrams",
    font =  DialogFont2, fg = "blue")
    Gramlab2.grid(row = 14, column = 2)

    division = Label(EntryWindow,
    text = "/",
    font =  DialogFont2, fg = "blue")
    division.grid(row = 14, column = 3)

    Thoulab2 = Label(EntryWindow,
    text = "           milliliters",
    font =  DialogFont2, fg = "blue")
    Thoulab2.grid(row = 14, column = 4)

    MilliLTextbox = Label(EntryWindow,
    borderwidth = 3, relief = "sunken",
    font = NumFont2, width = 5, bg = "white")
    MilliLTextbox.grid(row = 14, columnspan = 7)

    EqualSymbol = Label(EntryWindow,
    text = "=",
    font = DialogFont2, fg = "blue")
    EqualSymbol.grid(row = 14, column = 5)

    SamprMGTextbox = Label(EntryWindow, 
    borderwidth = 3, relief = "sunken",
    font = NumFont2, width = 6, bg = "white")
    SamprMGTextbox.grid(row = 14, column = 6)
    
    KgConislab2 = Label(EntryWindow,
    text = "Mg/mL",
    font =  DialogFont2, fg = "blue")
    KgConislab2.grid(row = 14, column = 7)

    spacetxtbx = Label(EntryWindow,
    text = "      ")
    spacetxtbx.grid(row = 17, column = 0)

    randMgKgButtsamp1 = Button(EntryWindow, 
    text = "Run sample calculation",
    borderwidth = 6, relief = "raised", font = DialogFont2, fg = "green",
    command = lambda: [randWeight2()])
    randMgKgButtsamp1.grid(row = 18, column = 4)

    spacetxtbx = Label(EntryWindow,
    text = "      ")
    spacetxtbx.grid(row = 19, column = 0)

    def buttactivity():
        if (ratimgbutt2['state'] == DISABLED):
            ratimgbutt2["state"] = NORMAL
            

    def eastereggtxt1():
        egg_label1 = Label(EntryWindow, 
        text = "What's the most painful part of coding a small animal dosing app?",
        font = DialogFont2, fg = "red")
        egg_label1.grid(row = 20, columnspan = 9)

    def eastereggtxt2():
        egg_label2 = Label(EntryWindow, 
        text = "... Dealing with all those little bytes!?!",
        font = DialogFont2, fg = "red")
        egg_label2.grid(row = 21, columnspan = 9)

    

    img_logo = \
    """ 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
    """
    img_logo = PhotoImage(data = img_logo)

    ratimgbutt1 = Button(EntryWindow,
    image = img_logo, borderwidth = 0,
    command =  lambda: [eastereggtxt1(), buttactivity()])
    ratimgbutt1.grid(row = 18, column = 1)

    ratimgbutt2 = Button(EntryWindow,
    image = img_logo, borderwidth = 0, 
    state = DISABLED,
    command = eastereggtxt2)
    ratimgbutt2.grid(row = 18, column = 7)
    
RtnOptButt4 = Button(frame4, 
text = "Return to Calculation Selection Method Options",
borderwidth = 6, relief = "raised", font = DialogFont, fg = "green",
command = lambda: [hide1(), hide2(), hide3(), ToTab0()])
RtnOptButt4.place(relx = .5, rely = .9, anchor = 'center')

root.mainloop()
